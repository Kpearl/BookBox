<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="CreationMapper">
	
	<resultMap id="creationSelectMap" type="creation">
		<result property="creationNo" 					column="creation_no" 										jdbcType="INTEGER"/>
		<result property="creationTitle"					column="creation_title" 										jdbcType="VARCHAR" />
		<result property="creationIntro" 				column="creation_intro" 									jdbcType="VARCHAR" />
		<result property="creationHead" 				column="creation_head" 									jdbcType="VARCHAR" />
		<result property="creationFileName" 					column="creation_file_name" 				jdbcType="VARCHAR" />
		<result property="creationOriginName" 		column="creation_origin_name" 		jdbcType="VARCHAR" />
					<association property="creationAuthor" 			javaType="user" 					resultMap="UserMapper.userSelectMap"/>
					<collection property="tagList" javaType="java.util.ArrayList" ofType="tag" column="{categoryNo=category_no,targetNo=creation_no}" select="TagMapper.getTagGroupList"/>					
					<collection property="tagList" javaType="java.util.ArrayList" ofType="tag" column="{categoryNo=category_no,targetNo=creation_no}" select="WritingMapper.getWritingList"/>
	</resultMap>
	
	
	<!-- SQL : INSERT -->
	<insert 	id="addCreation"		parameterType="creation" useGeneratedKeys="true" keyProperty="creationNo" keyColumn="creation_no">
	 	INSERT
		INTO creation(creation_title,  creation_intro, author, creation_head, creation_file_name, creation_origin_name) 
		VALUES	 (#{creationTitle},
						  #{creationIntro},
						  #{creationAuthor.email},
						  #{creationHead},
						  #{creationFileName},
						  #{creationOriginName})
	
	 </insert>
	 
	  <!-- SQL : SELECT ONE -->
	 <select 	id="getCreation"	parameterType="creation"	 resultMap="creationSelectMap">
		SELECT
		creation_no, 
		author email, 
		creation_title, 
		creation_head, 
		creation_file_name, 
		creation_origin_name, 
		creation_intro, 
		'1' AS category_no,
		active
		
		FROM creation 
		
		<where>
		
			creation_no = #{creationNo}
		 		
		<if test="active==0">
			AND active = 1
		</if>
		</where>
	 </select>
	 
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateCreation"	parameterType="creation" >
	   	UPDATE creation
	   	<set>
	  	 	<if test ="creationTitle != null">
	   			creation_title 	= #{creationTitle} ,
	   		</if>
	   		<if test ="creationIntro != null">
	   			creation_intro = #{creationIntro},
	   		</if>
	   		<if test ="creationHead != null">
				creation_head		= #{creationHead},
			</if>
			<if test ="creationFileName != null">
				creation_file_name 	= #{creationFileName},
			</if>
			<if test ="creationOriginName != null">
				creation_origin_name 	= #{creationOriginName},
			</if>
			<if test ="active != null">
				active 	= #{active}
			</if>
	   	</set>
	   	<where>
	   		creation_no = #{creationNo}
	   	</where>
	   	 
	 </update>
	 
	 	<!-- SQL : INSERTCreationSubscribe -->
	<insert 	id="addCreationSubscribe"		parameterType="map" >
	 	INSERT
		INTO subscribe (creation_no, email) 
		VALUES	 (#{creationNo},  #{email})
	
	 </insert>
	 
	 <!-- SQL : DeleteCreationSubscribe -->
	<insert 	id="deleteCreationSubscribe"		parameterType="map" >
	 	DELETE
		FROM subscribe  
		WHERE	 creation_no = #{creationNo},  
						 email = #{email}
	
	 </insert>
	 
	 	<!-- SQL : SELECT CreationLIST -->
	<select  id="getCreationList"  parameterType="map"	resultMap="creationSelectMap">
		
		SELECT
			c.creation_no, c.author email, 
			c.creation_title, 	c.creation_head, 
			c.creation_file_name, c.creation_origin_name, 
			c.creation_intro, c.active,
			'1' AS category_no,
	
			u.nickname

		FROM 
			user u
			LEFT JOIN creation c ON u.email = c.author
			LEFT JOIN tag_group tg ON c.creation_no = tg.target_no 
			LEFT JOIN tag  t ON tg.tag_no =t.tag_no

		<where>
				
			<if test="search.condition != null">
					<if test="search.condition == 0 and search.keyword !=''">
		 				c.creation_title LIKE '%${search.keyword}%'
					</if>
					<if test="search.condition == 1 and search.keyword !=''">
		 				c.author nickname LIKE '%${search.keyword}%'
					</if>
					<if test="search.condition == 2 and search.keyword !=''">
		 				t.tag_name LIKE '%${search.keyword}%'
					</if>
			</if>
		</where>
		LIMIT #{page.startRow}, #{page.pageSize}
	</select>
	
	
	

	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCreationCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT
							c.creation_no
						FROM 
							creation c
							
						<if test="condition == 2 and keyword !=''">
							LEFT JOIN tag_group tg ON c.creation_no = tg.target_no 
							LEFT JOIN tag  t ON tg.tag_no =t.tag_no
						</if>
						<where>
							<if test="condition != null">
									<if test="condition == 0 and keyword !=''">
						 				c.creation_title LIKE '%${keyword}%'
									</if>
									<if test="condition == 1 and keyword !=''">
						 				c.author nickname LIKE '%${keyword}%'
									</if>
									<if test="condition == 2 and keyword !=''">
						 				t.tag_name LIKE '%${keyword}%'
									</if>
							</if>
						</where>
					) countTable						
	 </select>

</mapper>